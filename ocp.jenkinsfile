node {
   // Mark the code checkout 'stage'....
   stage 'Checkout'
   
   sh "git clone https://github.com/GODZ217/jenkins.git"

   // Get the maven tool.
   // ** NOTE: This 'M3' maven tool must be configured
   // **       in the global configuration.           
   def mvnHome = tool 'M3'
   
   // Mark the code build 'stage'....
   stage 'Build'
   // Run the maven build
   sh "git fetch"
   sh "git switch main"
   sh "${mvnHome}/bin/mvn -Dmaven.test.failure.ignore clean package"
   step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])

   stage 'push'

            sh "mkdir -p build-folder/target/ build-folder/app/ "
            sh "cp ocp.Dockerfile build-folder/Dockerfile"
            

            sh "cp target/*.jar build-folder/target/"

            def tag = sh(returnStdout: true, script: "git rev-parse --short=8 HEAD").trim();
            
            sh "cat build-folder/Dockerfile | oc new-build -D - --name java || true"
            sh "oc start-build java --from-dir=build-folder/. --follow --wait "
            
            sh "oc tag cicd/java:latest javaservice/java:${tag} "
            sh "oc tag cicd/java:latest javaservice/java:latest "

     stage 'deploy'

      sh "sed 's,\\\$REGISTRY/\\\$HARBOR_NAMESPACE/\\\$APP_NAME:\\\$BUILD_NUMBER,image-registry.openshift-image-registry.svc:5000/javaservice/java:latest,g' kubernetes_dev.yaml > kubernetes-ocp.yaml"
            sh "oc apply -f kubernetes-ocp.yaml -n javaservice"
            sh "oc set triggers deployment/java --from-image=javaservice/java:latest -c java -n javaservice || true "


}
